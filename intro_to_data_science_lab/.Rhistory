library('mrmr')
install.packages("D:/mrmr/mrmr_1.0.tar.gz", repos = NULL, type = "source")
library('mrmr')
estpab(a)
a=c(1:9)
estpab(a)
funn(a)
library('Rcpp')
funn(a)
library('inline')
funn(a)
estpab(a)
remove.packages('mrmr')
update.packages("Rcpp")
knitr::opts_chunk$set(echo = TRUE)
?subset
knitr::opts_chunk$set(echo = TRUE)
plot(newhousing[,"logUnits"], newhousing[,"logValue"],
ylab = "logValue", xlab = "logUnits",
col = factor(newhousing[,"after2000"]))
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
getwd()
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
setwd("C")
setwd("C:")
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
setwd("C://")
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
setwd("D:/Subject Materials/Columbia/STAT COMP & INTRO TO DATA SCI/HW")
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
setwd("D:/Subject Materials/Columbia/STAT COMP & INTRO TO DATA SCI/HW")
housing <- read.csv(file = "properties.csv", header = TRUE, sep = ",")
newhousing <- housing[housing[,'assessed_value']!=0,]
plot(newhousing[,"logUnits"], newhousing[,"logValue"],
ylab = "logValue", xlab = "logUnits",
col = factor(newhousing[,"after2000"]))
plot(newhousing[,"logUnits"], newhousing[,"logValue"],
ylab = "logValue", xlab = "logUnits",
col = factor(newhousing[,"after2000"]))
##newhousing[,"logValue"] <- log(newhousing[,"assessed_value"])
logValue <- log(newhousing$assessed_value)
newhousing <- cbind(newhousing, logValue)
summary(logValue)
newhousing <- newhousing[!is.na(newhousing[,'res_units']),]
newhousing[,"logUnits"] <- log(newhousing[,'res_units'])
names(newhousing)
after2000 <- c(newhousing$year_built>2000)
newhousing <- cbind(newhousing, after2000)
names(newhousing)
plot(newhousing[,"logUnits"], newhousing[,"logValue"],
ylab = "logValue", xlab = "logUnits",
col = factor(newhousing[,"after2000"]))
legend("bottomright", legend = levels(factor(housing$after2000)), fill
= unique(factor(housing$after2000)))
plot(newhousing[,"logUnits"], newhousing[,"logValue"],
ylab = "logValue", xlab = "logUnits",
col = factor(newhousing[,"after2000"]),
legend("bottomright", legend = levels(factor(housing$after2000)), fill
= unique(factor(housing$after2000))))
plot(newhousing[,"logUnits"], newhousing[,"logValue"],
ylab = "logValue", xlab = "logUnits",
col = factor(newhousing[,"after2000"]))
legend("bottomright", legend = levels(factor(newhousing$after2000)), fill
= unique(factor(newhousing$after2000)))
data <- readLines("BaltimoreHomicides.txt")
data <- readLines("BaltimoreHomicides.txt")
?grep
dim(data)
length(data)
data
grep("Khloe Lewis",data)
deaths1 <- grep("shooting", data)
deaths2 <- grep("Shooting", data)
length(deaths1)
length(deaths2)
setdiff(deaths1, deaths2)
?setdiff
deaths1 <- grep("shooting", data)
deaths2 <- grep("Shooting", data)
length(deaths1)
length(deaths2)
setdiff(deaths1, deaths2)
length(deaths1)+length(deaths2)-setdiff(deaths1, deaths2)
r       <- regexpr(">Age:\\s.*years old<", data)
age_vec <- regmatches(data, r)
age_vec <- substring(age_vec, 2, nchar(age_vec) - 1)
head(age_vec)
r
data[r]
data[332]
data[]
1
data[1]
data[1][1]
regexpr(">Age:\\s.*years old<", data[1])
data[1]
r
r       <- regexpr(">Age:\\s.*years old<", data)
age_vec <- regmatches(data, r)
age_vec
nchar(age_vec) - 1
data[1]
r       <- regexpr(">[A:Z].*<", data)
#age_vec <- regmatches(data, r)
# <- substring(age_vec, 2, nchar(age_vec) - 1)
#head(age_vec)
r
r       <- regexpr(">[A:Z].*<", data)
age_vec <- regmatches(data, r)
# <- substring(age_vec, 2, nchar(age_vec) - 1)
#head(age_vec)
age_vec
age_vec[1]
data[1]
r       <- regexpr(">[A:Z].*<</a>", data)
age_vec <- regmatches(data, r)
# <- substring(age_vec, 2, nchar(age_vec) - 1)
#head(age_vec)
age_vec[1]
r       <- regexpr(">[A:Z].*</a>", data)
age_vec <- regmatches(data, r)
# <- substring(age_vec, 2, nchar(age_vec) - 1)
#head(age_vec)
age_vec[1]
r       <- regexpr(">[A:Z].*</a>", data)
age_vec <- regmatches(data, r)
age_vec <- substring(age_vec, 2, nchar(age_vec) - 4)
head(age_vec)
r       <- regexpr(">[A-Z].*</a>", data)
age_vec <- regmatches(data, r)
age_vec <- substring(age_vec, 2, nchar(age_vec) - 4)
head(age_vec)
age_vec
r       <- regexpr(">[A-Z].*</a>", data)
age_vec <- regmatches(data, r)
age_vec <- substring(age_vec, 2, nchar(age_vec) - 4)
head(age_vec,15)
length(age_vec)
age_vec
