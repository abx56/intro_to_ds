mean(data<=100 & data >=150)
head(data<=100)
mean(data<=100 | data >=150)
data
# Your answer to question 1.d here.
mean(data<=100 | data >=150)
mu = 400*(1/3)  #mean of normal
sigma = sqrt(400*(1/3)*(2/3))  #sd of normal
pnorm(100,mu,sigma)
# Your answer to question 1.d here.
mean(data<=100 | data >=150)
mu = 400*(1/3)  #mean of normal
sigma = sqrt(400*(1/3)*(2/3))  #sd of normal
pnorm(100,mu,sigma) + 1 - pnorm(150,mu,sigma)
# Your answer to question 1.e here.
MomentEstimator <- function(data, n){
phat <- mean(data) / n
return(phat)
}
MomentEstimator(data,400)
MomentEstimator(80,100)
?choose
?nlm
# Your answer to question 1.f here.
Neg_log_lik <- function(data, p){
n <- length(data)
log_lik <- sum(log(choose(n,data)) + data*log(p) + (n-data)*log(1-p) )
return (-log_lik)
}
nlm(Neg_log_lik,  p = 0.5, data = data)
# Your answer to question 1.f here.
Neg_log_lik <- function(data, p){
n <- length(data)
log_lik <- sum(log(choose(n,data)) + data*log(p) + (n-data)*log(1-p) )
return (log_lik)
}
nlm(Neg_log_lik,  p = 0.5, data = data)
# Your answer to question 1.f here.
Neg_log_lik <- function(data, p){
n <- length(data)
log_lik <- sum(log(choose(n,data)) + data*log(p) + (n-data)*log(1-p) )
return (-log_lik)
}
nlm(Neg_log_lik,  p = 0.5, data = data)
# Your answer to question 1.f here.
Neg_log_lik <- function(data=data, p){
n <- length(data)
log_lik <- sum(log(choose(n,data)) + data*log(p) + (n-data)*log(1-p) )
return (-log_lik)
}
nlm(Neg_log_lik,  p = 0.5)
# Your answer to question 1.f here.
Neg_log_lik <- function( p){
n <- length(data)
log_lik <- sum(log(choose(n,data)) + data*log(p) + (n-data)*log(1-p) )
return (-log_lik)
}
nlm(Neg_log_lik,  p = 0.5)
# Your answer to question 1.f here.
Neg_log_lik <- function(data, p){
n <- length(data)
log_lik <- sum(log(choose(n,data)) + data*log(p) + (n-data)*log(1-p) )
return (-log_lik)
}
nlm(Neg_log_lik,  p = 0.5, data = data)
nlm(Neg_log_lik,  p = 0.5, data = data)$estimate
Neg_log_lik(data,0.33)
set.seed(3)
# Your answer to question 1.g here.  Don't remove the set.seed(3) command.
B <- 5000
n <- length(data)
param_ests <- matrix(NA, nrow = B, ncol = 1)
colnames(param_ests) <- "p"
for (b in 1:B) {
resamp <- sample(1:n, n, replace = TRUE)
param_ests[b] <- MomentEstimator(data[resamp], 400)
}
var(param_ests)
set.seed(3)
# Your answer to question 1.g here.  Don't remove the set.seed(3) command.
B <- 5000
n <- length(data)
param_ests <- rep(NA, B)
for (b in 1:B) {
resamp <- sample(1:n, n, replace = TRUE)
param_ests[b] <- MomentEstimator(data[resamp], 400)
}
var(param_ests)
set.seed(4)
# Your answer to question 1.h here.  Don't remove the set.seed(4) command.
##first generate sample of size num
generate_samp <- function(num){
data <- rep(NA, num)
for (i in 1:num){
num_total_b <- sample(c(rep('r',10),rep('b',10),rep('g',10)), 400,
replace = TRUE)
data[i] <- sum(num_total_b == 'g')
}
return(data)
}
##as num range from 1:5000, compute the moment estimator
Mom_esti <- c()
for (i in 1:5000){
esti <- MomentEstimator(generate_samp(i),400)
Mom_esti <- c(Mom_esti, esti)
}
set.seed(4)
# Your answer to question 1.h here.  Don't remove the set.seed(4) command.
##first generate sample of size num
generate_samp <- function(num){
data <- rep(NA, num)
for (i in 1:num){
num_total_b <- sample(c(rep('r',10),rep('b',10),rep('g',10)), 400,
replace = TRUE)
data[i] <- sum(num_total_b == 'g')
}
return(data)
}
##as num range from 1:5000, compute the moment estimator
Mom_esti <- c()
for (i in 1:1000){
esti <- MomentEstimator(generate_samp(i),400)
Mom_esti <- c(Mom_esti, esti)
}
mean(Mom_esti)
var(Mom_esti)
Mom_esti <- c()
for (i in 1:1000){
esti <- MomentEstimator(generate_samp(i),400)
Mom_esti <- c(Mom_esti, esti)
}
mean(Mom_esti)
var(Mom_esti)
plot(Mom_esti)
debt <- read.csv("debt.csv", as.is = TRUE)
dim(debt)
head(debt)
names(debt)
dim(debt)
head(debt)
# Your answer to question 2.a here.
debt.by.county <- split(debt,f = states$Region)
# Your answer to question 2.a here.
debt.by.county <- split(debt,f = debt$Country)
lapply(debt.by.county, FUN = mean, 2)
# Your answer to question 2.a here.
debt.by.county <- split(debt,f = debt$Country, na.omit = T)
?split
# Your answer to question 2.a here.
debt.by.county <- split(debt,f = debt$Country, drop = TRUE)
lapply(debt.by.county, FUN = mean, 2)
?na.omit
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt),f = debt$Country, drop = TRUE)
lapply(debt.by.county, FUN = mean, 2)
head(debt.by.county)
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt),f = debt$Country, drop = TRUE)
sapply(debt.by.county, FUN = mean)
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt),f = debt$Country, drop = TRUE)
sapply(debt.by.county, FUN = mean, na.omit = T)
dim(na.omit(debt))
dim(debt)
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt),f = na.omit(debt$Country))
sapply(debt.by.county, FUN = mean, )
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt),f = na.omit(debt$Country))
sapply(debt.by.county, FUN = mean)
na.omit(debt)
sum(omit==NA)
sum(debt==NA)
debt$ratio==NA
length(debt$ratio)
length(omit(debt$ratio))
length(na.omit(debt$ratio))
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt),f = na.omit(debt$Country))
lapply(debt.by.county, FUN = mean)
# Your answer to question 2.a here.
debt.by.county <- split(na.omit(debt$ratio),f = na.omit(debt$Country))
lapply(debt.by.county, FUN = mean)
unique(debt$Country)
# Your answer to question 2.a here.
debt.by.year <- split(na.omit(debt$ratio),f = na.omit(debt$Year))
tapply(debt.by.year, debt$Country FUN = mean)
?tapply
# Your answer to question 2.a here.
debt.by.year <- split(na.omit(debt$ratio),f = na.omit(debt$Year))
tapply(debt.by.year, debt$Country, FUN = mean)
# Your answer to question 2.a here.
ratio.by.year <- split(debt$ratio,f = debt$Year)
country.by.year <- split(debt$Country,f = debt$Year)
tapply(ratio.by.year, country.by.year, FUN = mean)
# Your answer to question 2.a here.
ratio.by.year <- split(debt$ratio,f = debt$Year)
tapply(ratio.by.year, unique(debt$Country), FUN = mean)
unique(debt$Country)
class(ratio.by.year)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
#tapply(ratio.by.year, unique(debt$Country), FUN = mean)
mean.fun <- function(df) {
apply(df, MARGIN = 2, mean, na.rm = TRUE)
}
lapply(ratio.by.year, mean.fun)
names(debt)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
#tapply(ratio.by.year, unique(debt$Country), FUN = mean)
mean.fun <- function(df) {
apply(df[,4], MARGIN = 2, mean, na.rm = TRUE)
}
lapply(ratio.by.year, mean.fun)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
#tapply(ratio.by.year, unique(debt$Country), FUN = mean)
mean.fun <- function(df) {
apply(df[,4], MARGIN = 1, mean, na.rm = TRUE)
}
lapply(ratio.by.year, mean.fun)
ratio.by.year$`1946`
dim(ratio.by.year)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
#tapply(ratio.by.year, unique(debt$Country), FUN = mean)
mean.fun <- function(df) {
apply(df$ratio, MARGIN = 1, mean, na.rm = TRUE)
}
lapply(ratio.by.year, mean.fun)
library(plyr)
# Your answer to question 2.b here.
library(plyr)
my.mean.func <- function(data) {
return(mean(data$ratio))
}
year.avgs <- ddply(debt, .(yearID), my.mean.func)
# Your answer to question 2.b here.
library(plyr)
my.mean.func <- function(data) {
return(mean(data$ratio))
}
year.avgs <- ddply(debt, .(... = Year), my.mean.func)
year.avgs
year.avgs
names(debt)
# Your answer to question 2.b here.
library(plyr)
my.mean.func <- function(data) {
return(mean(data$growth))
}
year.avgs <- ddply(debt, .(... = Year), my.mean.func)
year.avgs
class(year.avgs)
?ddply
# Your answer to question 2.b here.
library(plyr)
my.mean.func <- function(data) {
return(mean(data$growth))
}
year.avgs <- ddply(debt, .(... = Year), my.mean.func)
names(year.avgs) <- c("Year", "AverageGrowth")
head(year.avgs)
?sort
# Your answer to question 2.c here.
year.avgs[order(year.avgs$AverageGrowth, decreasing = T), ]
# Your answer to question 2.d here.
plot(year.avgs$Year, year.avgs$AverageGrowth)
# Your answer to question 2.d here.
plot(year.avgs$Year, year.avgs$AverageGrowth, type = 'l',
xlab = "Year", ylab = "AverageGrowth")
# Your answer to question 2.d here.
plot(year.avgs$Year, year.avgs$AverageGrowth, type = 'b',
xlab = "Year", ylab = "AverageGrowth")
cor(debt$growth,debt$ratio)
# Your answer to question 2.e here.
cor(debt$growth,debt$ratio)
my.cor <- function(data){
return(cor(data$growth,data$ratio))
}
tapply(debt, debt$Year, my.cor)
# Your answer to question 2.e here.
cor(debt$growth,debt$ratio)
my.cor <- function(data){
return(cor(data$growth,data$ratio))
}
sapply(split(debt, debt$Year), my.cor)
cor.by.year <- sapply(split(debt, debt$Year), my.cor)
cor.by.year <- tapply(split(debt, debt$Year), my.cor)
cor.by.year <- lapply(split(debt, debt$Year), my.cor)
cor.by.year <- sapply(split(debt, debt$Year), my.cor)
names(cor.by.year)
# Your answer to question 2.e here.
cor(debt$growth,debt$ratio)
my.cor <- function(data){
return(cor(data$growth,data$ratio))
}
cor.by.year <- sapply(split(debt, debt$Year), my.cor)
hist(cor.by.year)
mean(cor.by.year)
# Your answer to question 2.e here.
cor(debt$growth,debt$ratio)
my.cor <- function(data){
return(cor(data$growth,data$ratio))
}
cor.by.year <- sapply(split(debt, debt$Year), my.cor)
hist(cor.by.year,xlab = "cor")
mean(cor.by.year)
debt.france <- debt[debt$Country=="France",]
dim(debt.france)
?ifelse
# Your answer to question 2.g.1 here.
n.growth <- function(year, dataframe){
logic.stat <- sum(debt$Year==year+1)>0
return(ifelse(logic.stat,debt$growth[debt$Year==year+1,],NA))
}
n.growth(1989,debt.france)
# Your answer to question 2.g.1 here.
n.growth <- function(year, dataframe){
logic.stat <- sum(dataframe$Year==year+1)>0
return(ifelse(logic.stat,debt$growth[debt$Year==year+1,],NA))
}
n.growth(1989,debt.france)
n.growth <- function(year, dataframe){
logic.stat <- sum(dataframe$Year==year+1)>0
return(ifelse(logic.stat,dataframe$growth[debt$Year==year+1,],NA))
}
n.growth(1989,debt.france)
n.growth <- function(year, dataframe){
logic.stat <- sum(dataframe$Year==year+1)>0
return(ifelse(logic.stat,dataframe$growth[dataframe$Year==year+1,],NA))
}
n.growth(1989,debt.france)
n.growth <- function(year, data){
logic.stat <- sum(data$Year==year+1)>0
return(ifelse(logic.stat,data$growth[which(data$Year==year+1),],NA))
}
n.growth(1989,debt.france)
dim(debt.france)
data=debt.france
year=1989
logic.stat <- sum(data$Year==year+1)>0
logic.stat
ifelse(logic.stat,data$growth[which(data$Year==year+1),],NA)
which(data$Year==year+1)
n.growth <- function(year, data){
logic.stat <- sum(data$Year==year+1)>0
return(ifelse(logic.stat,data$growth[which(data$Year==year+1)],NA))
}
which(data$Year==year+1)
n.growth <- function(year, data){
logic.stat <- sum(data$Year==year+1)>0
if(logic.stat){
return(data$growth[which(data$Year==year+1)])
}else{
return(NA)
}
}
n.growth(1989,debt.france)
yearrange <- min(debt$Year) : max(debt$Year)
yearrange
# Your answer to question 2.g.2 here.
yearrange <- min(debt$Year) : max(debt$Year)
next.growth <- sapply(yearrange, n.growth, data = debt.france)
next.growth
names(next.growth)
names(next.growth) <- yearrange
names(next.growth)
next.growth$1971
next.growth$`1971`
next.growth[which(yearrange==1971)]
next.growth[which(yearrange==1971)]
next.growth[which(yearrange==1972)]
all(next.growth==my.next.growth(debt.france))
# Your answer to question 2.g here.
my.next.growth <- function(data.country){
next.growth <- sapply(yearrange, n.growth, data = data.country)
}
all(next.growth==my.next.growth(debt.france))
# Your answer to question 2.g here.
my.next.growth <- function(data.country){
next.growth <- sapply(yearrange, n.growth, data = data.country)
return(next.growth)
}
all(next.growth==my.next.growth(debt.france))
my.next.growth(debt.france)
# Your answer to question 2.g here.
my.next.growth <- function(data.country){
next.growth <- sapply(yearrange, n.growth, data = data.country)
return(next.growth)
}
next.growth <- ddply(debt, .(Country), my.next.growth)
debt <- cbind(debt,next.growth)
length(next.growth)
next.growth <- ddply(debt, .(Country), my.next.growth)
next.growth
# Your answer to question 2.b here.
library(plyr)
my.mean.func <- function(data) {
return(mean(data$growth))
}
year.avgs <- ddply(debt, .(... = Year), my.mean.func)
names(year.avgs) <- c("Year", "AverageGrowth")
year.avgs
next.growth <- ddply(debt, .(Country), head)
next.growth
my.next.growth(debt.france)
next.growth <- sapply(yearrange, n.growth, data = debt.france)
next.growth
next.growth <- ddply(debt, .(Country), my.next.growth)
next.growth
dim(next.growth)
dim(debt)
19*64
names(debt)
# Your answer to question 2.g here.
my.next.growth <- function(data.country){
year <- data.country$Year
next.growth <- sapply(year, n.growth, data = data.country)
return(next.growth)
}
next.growth <- ddply(debt, .(Country), my.next.growth)
# Your answer to question 2.g here.
my.next.growth <- function(data.country){
year <- data.country$Year
print(year)
next.growth <- sapply(year, n.growth, data = data.country)
return(next.growth)
}
next.growth <- ddply(debt, .(Country), my.next.growth)
my.next.growth(debt.france)
next.growth <- ddply(debt, .(Country), my.next.growth)
# Your answer to question 2.g here.
my.next.growth <- function(data.country){
year <- data.country$Year
next.growth <- sapply(year, n.growth, data = data.country)
return(next.growth)
}
next.growth <- ddply(debt, .(Country), my.next.growth)
next.growth <- ddply(debt, .(Country), head)#my.next.growth)
next.growth
# Your answer to question 2.g.2 here.
yearrange <- debt.france$Year
next.growth <- sapply(yearrange, n.growth, data = debt.france)
next.growth[which(yearrange==1971)]
next.growth[which(yearrange==1972)]
next.growth <- tapply(debt, debt$Country, my.next.growth)
next.growth <- ddply(debt, .(Country), my.next.growth)#my.next.growth)
my.next.growth <- function(data.country){
year <- unique(debt$Year)
next.growth <- sapply(year, n.growth, data = data.country)
return(next.growth)
}
next.growth <- ddply(debt, .(Country), my.next.growth)#my.next.growth)
?merge
dim(next.growth)
names(next.growth)
names(next.growth[-1]) <- unique(debt$Year)
names(next.growth)
names(next.growth[,-1]) <- unique(debt$Year)
colnames(next.growth[-1]) <- unique(debt$Year)
names(next.growth)
unique(debt$Year)
colnames(next.growth[-1])
colnames(next.growth[-1]) <- unique(debt$Year)
colnames(next.growth[-1])
names(next.growth) <- c("Country",unique(debt$Year))
names(next.growth)
next.growth1 <- ddply(debt, .(Country), my.next.growth)
names(next.growth1) <- c("Country",unique(debt$Year))
i=5
xloc <- which(next.growth1$Country==debt$Country[i])
yloc <- which(names(next.growth1)==as.character(debt$Year[i]))
xloc
yloc
next.growth <- rep(NA, length(debt$Year))
for (i in 1:nrow(debt)){
xloc <- which(next.growth1$Country==debt$Country[i])
yloc <- which(names(next.growth1)==as.character(debt$Year[i]))
value = next.growth1[xloc,yloc]
next.growth[i] <- value
}
cbind(debt,next.growth)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
mean.fun <- function(df) {
return(apply(df$growth, MARGIN = 1, mean, na.rm = TRUE))
}
lapply(ratio.by.year, mean.fun)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
mean.fun <- function(df) {
return(apply(df$growth, MARGIN = 2, mean, na.rm = TRUE))
}
lapply(ratio.by.year, mean.fun)
# Your answer to question 2.a here.
ratio.by.year <- split(debt,f = debt$Year)
mean.fun <- function(df) {
return(apply(df$growth, MARGIN = 1, mean, na.rm = TRUE))
}
lapply(ratio.by.year, mean.fun)
mean.fun(ratio.by.year$`1946`)
ratio.by.year$`1946`
mean.fun <- function(df) {
return(mean(df$growth))
}
mean.fun(ratio.by.year$`1946`)
lapply(ratio.by.year, mean.fun)
aveg_growth <- lapply(ratio.by.year, mean.fun)
aveg_growth$`1972`
aveg_growth$`1989`
