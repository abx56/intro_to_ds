sprint.m.fastest
whichmin <- function(dataframe){
return (dataframe[which.min(dataframe$Time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, min)
sprint.m.fastest
whichmin <- function(dataframe){
return (dataframe[which.min(dataframe$Time),])
}
sprint.m.fastest <- tapply(sprint.m, sprint.m$CityDate, whichmin)
names(sprint.m)
sum(table(sprint.m$Rank)==1) / length(sprint.m$Rank)
sum(table(sprint.m$Rank)==2) / length(sprint.m$Rank)
table(sprint.m$Rank)
?which.min
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest
dim(sprint.m.fastest)
class(sprint.m.fastest)
rm(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- cbind(tapply(sprint.m$Time, sprint.m$CityDate, whichmin))
dim(sprint.m.fastest)
head(sprint.m.fastest)
sprint.m.fastest[1]
class(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
head(sprint.m.fastest)
dim(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
#sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
class(sprint.m.fastest[1])
sprint.m.fastest[1]
whichmin <- function(time){
return (data.frame(sprint.m[which.min(time),]))
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
#sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
class(sprint.m.fastest[1])
sprint.m.fastest[1]
whichmin <- function(time){
return (data.frame(sprint.m[which.min(time),]))
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
#sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
head(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- t(sapply(sprint.m.fastest, rbind))
head(sprint.m.fastest)
names(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
names(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- data.frame(sapply(sprint.m.fastest, rbind))
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- data.frame(tapply(sprint.m$Time, sprint.m$CityDate, whichmin))
#sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return (sprint.m[which.min(time),]))
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
sum(table(sprint.m.fastest$Time)==1)
table(sprint.m.fastest$Time
)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == sum(table(sprint.m$CityDate)==1)
length(table(sprint.m$CityDate))
sum(sprint.m$CityDate==sprint.m$CityDate[which(sprint.m$Time==9.58)])
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == sum(table(sprint.m$CityDate)==1)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate)==1)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
head(sprint.m.fastest,5)
sprint.m.fastest[1]
sprint.m.fastest[1,]
sprint.m.fastest$Rank
sprint.m.fastest$Time
tapply(sprint.m$Time,min)
tapply(sprint.m$Time,sprint.m$CityDate,min)
sprint.m.fastest$Time
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
sprint.m.fastest <- tapply(sprint.m$Time,track,min)
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
sprint.m.fastest <- tapply(sprint.m$Time,track,which.min)
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- tapply(sprint.m$Time,track,whichmin)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- tapply(sprint.m,track,whichmin)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- tapply(sprint.m[,1:2],cbind(track,track),whichmin)
dim(cbind(track,track))
dim(sprint.m[,1:2])
?split
class(split(sprint.m,track))
split(sprint.m,track)[1]
split(sprint.m,track)[2]
split(sprint.m,track)[4]
split(sprint.m,track)[5]
split(sprint.m,track)[6]
?merge
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
head(sprint.m.fastest)
sprint.m.fastest[1]
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
sprint.m.fastest$Time
sprint.m.fastest$Time==tapply(sprint.m$Time,track,min)
sum(sprint.m.fastest$Time==tapply(sprint.m$Time,track,min))
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
#sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
#sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
sum(sprint.w$CityDate==sprint.w$CityDate[which(sprint.w$Time==9.58)])
#3)
track <- factor(sprint.w$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,track),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)))
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,sprint.m$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
head(sprint.m.fastest,5)
sprint.m.fastest$CityDate
sprint.m.fastest$CityDate[1:5]
head(sprint.m.fastest$CityDate)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)),as.is = T)
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)))
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)),stringsAsFactors = FALSE)
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)))
sprint.w.fastest$CityDate <- as.character(sprint.w.fastest)
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
####12.01.2017####
strikes <- read.csv("strikes.csv", as.is = TRUE)
dim(strikes)
head(strikes, 3)
italy.strikes <- subset(strikes, country == "Italy")
# Equivalently,
italy.strikes <- strikes[strikes$country == "Italy", ]
dim(italy.strikes)
head(italy.strikes, 5)
italy.fit <- lm(strike.volume ~ left.parliament,
data = italy.strikes)
plot(strike.volume ~ left.parliament, data = italy.strikes,
main = "Italy Strike Volume Versus Leftwing Alignment",
ylab = "Strike volume", xlab = "Leftwing Alignment")
abline(italy.fit, col = 2)
names(strikes)
my.strike.lm <- function(country.df) {
return(lm(strike.volume ~ left.parliament,
data = country.df)$coeff)
}
my.strike.lm(subset(strikes, country == "Italy"))
strike.coef <- NULL
countries <- unique(strikes$country)
for (this.country in countries) {
country.dat <- subset(strikes, country == this.country)
new.coefs <- my.strike.lm(country.dat)
strike.coef <- cbind(strike.coef, new.coefs)
}
colnames(strike.coef) <- countries
strike.coef
strikes.split <- split(strikes, strikes$country)
names(strikes.split)
strike.coef <- sapply(strikes.split[1:12], my.strike.lm)
strike.coef
plot(1:ncol(strike.coef), strike.coef[2, ], xaxt = "n",
xlab = "", ylab = "Regression coefficient",
main="Countrywise labor activity by leftwing score")
axis(side = 1, at = 1:ncol(strike.coef),
labels = colnames(strike.coef), las = 2,
cex.axis = 0.5)
abline(h = 0, col = "grey")
my.array <- array(1:27, c(3,3,3))
rownames(my.array) <- c("R1", "R2", "R3")
colnames(my.array) <- c("C1", "C2", "C3")
dimnames(my.array)[[3]] <- c("Bart", "Lisa", "Maggie")
my.array
my.array[, , 3]
library(plyr)
aaply(my.array, 1, sum) # Get back an array
adply(my.array, 1, sum) # Get back a data frame
alply(my.array, 1, sum) # Get back a list
aaply(my.array, 2:3, sum) # Get back a 3 x 3 array
adply(my.array, 2:3, sum) # Get back a data frame
alply(my.array, 2:3, sum) # Get back a list
my.list <- list(nums = rnorm(1000), lets = letters,
pops = state.x77[ ,"Population"])
head(my.list[[1]], 5)
head(my.list[[2]], 5)
head(my.list[[3]], 5)
laply(my.list, range) # Get back an array
ldply(my.list, range) # Get back a data frame
llply(my.list, range) # Get back a list
# Doesn't work! Outputs have different types/lengths
# laply(my.list, summary)
# ldply(my.list, summary)
llply(my.list, summary) # Works just fine
par(mfrow = c(3, 3), mar = c(4, 4, 1, 1))
a_ply(my.array, 2:3, plot, ylim = range(my.array),
pch = 19, col = 6)
?a_ply
sprint.m.fastest <- read.table("sprint.m.fastest.csv", header = T, as.is = T)
sprint.m.fastest <- read.table("sprint.m.fastest.csv", header = T, as.is = T)
sprint.m.fastest <- read.csv("sprint.m.fastest.csv", header = T, as.is = T)
sprint.w.fastest <- read.csv("sprint.w.fastest.csv", header = T, as.is = T)
intersect()
?intersect
(x <- c(sort(sample(1:20, 9)), NA))
(y <- c(sort(sample(3:23, 7)), NA))
union(x, y)
intersect(x, y)
x
y
intersect(x,y)
common.meets <- intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate)
common.meets
?merge
common.meets <- merge(sprint.m.fastest,sprint.m.fastest,
by=intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate))
common.meets <- merge(sprint.m.fastest,sprint.m.fastest,
by=intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate),
by.x=by,by.y=by)
# common.entry <- intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate)
# common.meets <- merge(sprint.m.fastest[,common.entry],sprint.w.fastest[,common.entry],
#                       by=,
#                       by.x=by,by.y=by)
common.meets <- merge(sprint.m.fastest,sprint.w.fastest,
by=intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate),
by.x=by,by.y=by)
# common.entry <- intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate)
# common.meets <- merge(sprint.m.fastest[,common.entry],sprint.w.fastest[,common.entry],
#                       by=,
#                       by.x=by,by.y=by)
common.meets <- merge(sprint.m.fastest,sprint.w.fastest,
#by=intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate),
by.x="CityDate",by.y="CityDate")
dim(common.meets)
head(common.meets,5)
# # common.entry <- intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate)
# # common.meets <- merge(sprint.m.fastest[,common.entry],sprint.w.fastest[,common.entry],
# #                       by=,
# #                       by.x=by,by.y=by)
# common.meets <- merge(sprint.m.fastest,sprint.w.fastest,
#                       #by=intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate),
#                       by.x="CityDate",by.y="CityDate")
common.meets <- intersect(sprint.m.fastest$CityDate,sprint.w.fastest$CityDate)
?which
ind.m <- which(sprint.m.fastest$CityDate, common.meets)
ind.m <- which(common.meets)
ind.m <- which(sprint.m.fastest$CityDate == common.meets)
ind.m
ind.m <- which(iselement(common.meets,sprint.m.fastest))
is.element(common.meets,sprint.m.fastest)
ind.m <- which(is.element(common.meets,sprint.m.fastest$CityDate))
ind.m
is.element(common.meets,sprint.m.fastest$CityDate)
ind.m <- which(is.element(sprint.m.fastest$CityDate,common.meets))
ind.m
sprint <- cbind(MensTime = sprint.m.fastest[ind.m,Time],
WomensTime = sprint.w.fastest[ind.w,Time],
CityDate = common.meets)
sprint <- cbind(MensTime = sprint.m.fastest$Time[ind.m,],
WomensTime = sprint.w.fastest$Time[ind.w,],
CityDate = common.meets)
sprint <- cbind(MensTime = sprint.m.fastest$Time[ind.m],
WomensTime = sprint.w.fastest$Time[ind.w],
CityDate = common.meets)
ind.m <- which(is.element(sprint.m.fastest$CityDate,common.meets))
ind.w <- which(is.element(sprint.w.fastest$CityDate,common.meets))
sprint <- cbind(MensTime = sprint.m.fastest$Time[ind.m],
WomensTime = sprint.w.fastest$Time[ind.w],
CityDate = common.meets)
sprint <- cbind(MensTime = sprint.m.fastest$Time[ind.m],
WomensTime = sprint.w.fastest$Time[ind.w],
CityDate = common.meets)
head(sprint,5)
head(ind.m)
head(ind.w)
all(sprint.m.fastest$CityDate[ind.m]==sprint.w.fastest$CityDate[ind.w])
sprint <- cbind(MensTime = sprint.m.fastest$Time[ind.m],
WomensTime = sprint.w.fastest$Time[ind.w],
CityDate = common.meets)
head(sprint,5)
all(sprint.m.fastest$CityDate[ind.m]==sprint.w.fastest$CityDate[ind.w])
?merge
merge(sprint.m.fastest,sprint.w.fastest,
by="CityDate")
sprint <- merge(sprint.m.fastest,sprint.w.fastest,by="CityDate")
sprint2 <- merge(sprint.m.fastest,sprint.w.fastest,by="CityDate")
sprint <- cbind(MensTime = sprint.m.fastest$Time[ind.m],
WomensTime = sprint.w.fastest$Time[ind.w],
CityDate = common.meets)
head(sprint,5)
all(sprint.m.fastest$CityDate[ind.m]==sprint.w.fastest$CityDate[ind.w])
sprint2 <- merge(sprint.m.fastest,sprint.w.fastest,by="CityDate")
sprint2 <- data.frame(MensTime = sprint2$Time.x,
WomensTime = sprint2$Time.y,
sprint2$CityDate)
sprint2 == sprint
sprint2 <- merge(sprint.m.fastest,sprint.w.fastest,by="CityDate")
sprint2 <- data.frame(MensTime = sprint2$Time.x,
WomensTime = sprint2$Time.y,
sprint2$CityDate)
all(sprint2 == sprint)
sprint2 <- merge(sprint.m.fastest$Time,sprint.w.fastest$Time,by="CityDate")
