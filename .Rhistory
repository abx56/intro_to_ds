draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..)) +
geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi))) +
xlim(0,e+07)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..)) +
geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi))) +
xlim(0,10^7)
ahat = 2.654
xmin = 407760
f <- function(x, a = ahat, x_min = xmin){
return ((a-1)/x_min*(x/x_min)^(-a))
}
xi <- 407760:1000000
plot(xi, f(xi),xlab = "x",ylab="f(x)")
upper.income <- function(u, a = ahat,x_min=xmin ){
return (x_min*(1-u)^(1/(1-a)))
}
upper.income(0.5)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..)) +
geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi))) +
xlim(0,10^7)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..)) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi))) +
xlim(0,10^7)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..)) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi))) +
xlim(0,5*10^6)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..)) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col='red')) +
xlim(0,5*10^6)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..,col='pink')) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col='blue')) +
xlim(0,5*10^6)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..,col='pink')) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col='blue')) +
xlim(0,5*10^6)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..,col='pink')) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col='blue')) +
xlim(0,10^6)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..,col='pink')) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col='blue')) +
xlim(3*10^5,2*10^6)
?co
?col
?color
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..,col='blue')) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col='green')) +
xlim(3*10^5,2*10^6)
library(ggplot2)
samp_p <- runif(1000)
draws <- upper.income(samp_p)
ggplot() +
geom_histogram(aes(x = draws, y = ..density..,col="pink")) +
#geom_density(aes(x = draws)) +
geom_smooth(aes(x = xi, y = f(xi),col="blue")) +
xlim(3*10^5,2*10^6)
sprint.m <- read.csv("sprint.m.csv", header = T,as.is = T)
sprint.m <- read.csv("sprint.m.csv", header = T,as.is = T)
CityDate <- paste(sprint.m$City,sprint.m$Date)
head(CityDate)
sprint.m <- read.csv("sprint.m.csv", header = T,as.is = T)
CityDate <- paste(sprint.m$City,sprint.m$Date)
sprint.m <- cbind(sprint.m, CityDate)
tables(sprint.m$CityDate)
table(sprint.m$CityDate)
sum(table(sprint.m$CityDate)==1) / nrow(sprint.m)
sum(table(sprint.m$CityDate)==1)
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(sprint.m$City == "Usain Bolt")
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(sprint.m$Date == 9.58)
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(sprint.m$Date == 9.58)
class(sprint.m)
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(sprint.m$Date == 9.58)
sprint.m
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(sprint.m$City == "U.*")
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sort(sprint.m$City, decreasing = T)
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sort(sprint.m$City, decreasing = T)
head(sprint.m)
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
which(sprint.m$Time==9.58)
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sprint.m$Time==9.58
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate == "Usain Bolt 9.58")
sum(sprint.m$CityDate==sprint.m$CityDate[which(sprint.m$Time==9.58)])
sum(table(sprint.m$CityDate)==1)
sum(sprint.m$CityDate==sprint.m$CityDate[which(sprint.m$Time==9.58)])
?tapply
sprint.m.fastest <- tapply(sprint.m, sprint.m$CityDate, which.max)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, which.max)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, which.max)
sprint.m.fastest
sprint.m$CityDate=="Abuja 12.10.2003"
sprint.m$CityDate[sprint.m$CityDate=="Abuja 12.10.2003"]
sprint.m[sprint.m$CityDate=="Abuja 12.10.2003",]
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, which.min)
sprint.m.fastest
whichmin <- function(dataframe){
return (dataframe[which.min(dataframe$Time),])
}
sprint.m.fastest <- tapply(sprint.m, sprint.m$CityDate, whichmin)
whichmin <- function(dataframe){
return (dataframe[which.min(dataframe$Time),])
}
sprint.m.fastest <- sprint.m[tapply(sprint.m$Time, sprint.m$CityDate, which.min),]
sprint.m.fastest
whichmin <- function(dataframe){
return (dataframe[which.min(dataframe$Time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, min)
sprint.m.fastest
whichmin <- function(dataframe){
return (dataframe[which.min(dataframe$Time),])
}
sprint.m.fastest <- tapply(sprint.m, sprint.m$CityDate, whichmin)
names(sprint.m)
sum(table(sprint.m$Rank)==1) / length(sprint.m$Rank)
sum(table(sprint.m$Rank)==2) / length(sprint.m$Rank)
table(sprint.m$Rank)
?which.min
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest
dim(sprint.m.fastest)
class(sprint.m.fastest)
rm(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- cbind(tapply(sprint.m$Time, sprint.m$CityDate, whichmin))
dim(sprint.m.fastest)
head(sprint.m.fastest)
sprint.m.fastest[1]
class(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
head(sprint.m.fastest)
dim(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
#sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
class(sprint.m.fastest[1])
sprint.m.fastest[1]
whichmin <- function(time){
return (data.frame(sprint.m[which.min(time),]))
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
#sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
class(sprint.m.fastest[1])
sprint.m.fastest[1]
whichmin <- function(time){
return (data.frame(sprint.m[which.min(time),]))
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
#sprint.m.fastest <- sapply(sprint.m.fastest, rbind)
head(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- t(sapply(sprint.m.fastest, rbind))
head(sprint.m.fastest)
names(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
names(sprint.m.fastest)
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- data.frame(sapply(sprint.m.fastest, rbind))
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- data.frame(tapply(sprint.m$Time, sprint.m$CityDate, whichmin))
#sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
whichmin <- function(time){
return (sprint.m[which.min(time),])
}
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate, whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return (sprint.m[which.min(time),]))
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
sum(table(sprint.m.fastest$Time)==1)
table(sprint.m.fastest$Time
)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == sum(table(sprint.m$CityDate)==1)
length(table(sprint.m$CityDate))
sum(sprint.m$CityDate==sprint.m$CityDate[which(sprint.m$Time==9.58)])
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == sum(table(sprint.m$CityDate)==1)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate)==1)
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
function(time) return(sprint.m[which.min(time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
head(sprint.m.fastest,5)
sprint.m.fastest[1]
sprint.m.fastest[1,]
sprint.m.fastest$Rank
sprint.m.fastest$Time
tapply(sprint.m$Time,min)
tapply(sprint.m$Time,sprint.m$CityDate,min)
sprint.m.fastest$Time
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
sprint.m.fastest <- tapply(sprint.m$Time,track,min)
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
sprint.m.fastest <- tapply(sprint.m$Time,track,which.min)
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- tapply(sprint.m$Time,track,whichmin)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- tapply(sprint.m,track,whichmin)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- tapply(sprint.m[,1:2],cbind(track,track),whichmin)
dim(cbind(track,track))
dim(sprint.m[,1:2])
?split
class(split(sprint.m,track))
split(sprint.m,track)[1]
split(sprint.m,track)[2]
split(sprint.m,track)[4]
split(sprint.m,track)[5]
split(sprint.m,track)[6]
?merge
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
head(sprint.m.fastest)
sprint.m.fastest[1]
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
sprint.m.fastest$Time
sprint.m.fastest$Time==tapply(sprint.m$Time,track,min)
sum(sprint.m.fastest$Time==tapply(sprint.m$Time,track,min))
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
#sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
#sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
# sprint.m.fastest <- tapply(sprint.m$Time, sprint.m$CityDate,
#                            function(time) return(sprint.m[which.min(time),]) )
# sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
# nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
# head(sprint.m.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,track),whichmin)
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
head(sprint.m.fastest)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
sum(sprint.w$CityDate==sprint.w$CityDate[which(sprint.w$Time==9.58)])
#3)
track <- factor(sprint.w$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,track),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)))
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
track <- factor(sprint.m$CityDate)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.m.fastest <- lapply(split(sprint.m,sprint.m$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.m.fastest <- data.frame(t(sapply(sprint.m.fastest, rbind)))
nrow(sprint.m.fastest) == length(table(sprint.m$CityDate))
head(sprint.m.fastest,5)
sprint.m.fastest$CityDate
sprint.m.fastest$CityDate[1:5]
head(sprint.m.fastest$CityDate)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)),as.is = T)
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)))
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)),stringsAsFactors = FALSE)
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
#1)
sprint.w <- read.csv("sprint.w.csv", header = T,as.is = T)
CityDate <- paste(sprint.w$City,sprint.w$Date)
sprint.w <- cbind(sprint.w, CityDate)
#2)
length(table(sprint.w$CityDate))
#3)
whichmin <- function(data){
return (data[which.min(data$Time),])
}
sprint.w.fastest <- lapply(split(sprint.w,sprint.w$CityDate),
function(data) return (data[which.min(data$Time),]) )
sprint.w.fastest <- data.frame(t(sapply(sprint.w.fastest, rbind)))
sprint.w.fastest$CityDate <- as.character(sprint.w.fastest)
nrow(sprint.w.fastest) == length(table(sprint.w$CityDate))
head(sprint.w.fastest,5)
